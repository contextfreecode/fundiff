def square (x:n=>Float) : n=>Float =
  -- sq x
  pow x (for i. 2.0)

def sumSquare (x:n=>Float) : Float =
  sum $ square x

Small = Fin 5

def calcGrad : Small=>_=>Float =
  x = linspace Small (-1.0) 1.5
  transpose [x, square x, grad sumSquare x]

def calcSpeed : _=>Float =
  bigSize = FToI 1.0e7
  x = linspace (Fin bigSize) (-1.0) 1.0
  y = [square x, grad (\x. sum $ square x) x]
  for i. mean y.i

calcGrad
-- calcSpeed

-- jvp square x one
